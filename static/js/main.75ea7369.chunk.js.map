{"version":3,"sources":["components/BlockTerritory.js","components/NavBar.js","components/graphs/BlockTowns.js","components/graphs/BlockHospital.js","components/graphs/BlockSickness.js","components/BlockDashboard.js","App.js","index.js"],"names":["BlockTerrytory","props","className","terrytory","name","count","NavBar","BlockTowns","dataTowns","towns","facets","map","town","path","data","margin","top","right","bottom","left","innerRadius","padAngle","cornerRadius","colors","scheme","borderWidth","borderColor","from","modifiers","radialLabelsSkipAngle","radialLabelsTextXOffset","radialLabelsTextColor","radialLabelsLinkOffset","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","radialLabelsLinkStrokeWidth","radialLabelsLinkColor","slicesLabelsSkipAngle","slicesLabelsTextColor","animate","motionStiffness","motionDamping","defs","id","type","background","color","size","padding","stagger","rotation","lineWidth","spacing","BlockHospital","dataHospitals","hospitals","hospital","dataKeys","keys","indexBy","groupMode","axisTop","axisRight","axisBottom","tickSize","tickPadding","tickRotation","legend","legendPosition","legendOffset","axisLeft","labelSkipWidth","labelSkipHeight","labelTextColor","legends","dataFrom","anchor","direction","justify","translateX","translateY","itemsSpacing","itemWidth","itemHeight","itemDirection","itemOpacity","symbolSize","effects","on","style","BlockSickness","root","children","Object","sickness","index","positiveCount","filter","console","log","identity","value","colorBy","fill","match","depth","BlockDashboard","App","useState","setTerritory","state","setTowns","showDashboard","setShowDashboard","sector","setHospitals","setSickness","useEffect","fetch","then","response","json","facet_groups","searchTerritory","facet","searchTowns","searchHospitals","searchSickness","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.75ea7369.chunk.js","sourcesContent":["import React from 'react';\nimport '../styles/BlockTerrytory.scss'\n\nconst BlockTerrytory =  (props) => {\n\n    return(\n    <div className=\"blockTerritory\">\n        <h3>Estado Predefinido</h3>\n        <div className=\"blockTerritory__terrytory\">{props.terrytory.name}</div>\n        <h3>Total de Casos Positivos SARS-CoV-2: </h3> \n        <div className=\"blockTerritory__count\">{props.terrytory.count}</div>\n    </div>\n    )\n}\n\nexport default BlockTerrytory;","import React from 'react';\nimport '../styles/NavBar.scss';\n\nconst NavBar =  () => {\n    return (\n        <div className=\"navBar\">\n            <div className=\"navBar__title\"> Datos Asociados al Covid 19 </div>\n        </div>\n    )\n}\n\nexport default NavBar;","import React from 'react';\n// Libraries\nimport { ResponsivePie } from '@nivo/pie'\n// Styles\nimport '../../styles/BlockTowns.scss';\n\nconst BlockTowns = (props) => {\n  \n\n    const dataTowns = props.towns[0].facets.map( town => {\n        const data = {\"id\" : town.path , 'label': town.path ,\"value\": town.count};\n        return data;\n    })\n\n    return (\n        <div className=\"blockTowns\">\n            <div className=\"blockTowns__block\">\n                <ResponsivePie\n                    data={dataTowns}\n                    margin={{ top: 40, right: 80, bottom: 80, left: 80 }}\n                    innerRadius={0.5}\n                    padAngle={0.7}\n                    cornerRadius={3}\n                    colors={{ scheme: 'spectral' }}\n                    borderWidth={1}\n                    borderColor={{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] }}\n                    radialLabelsSkipAngle={10}\n                    radialLabelsTextXOffset={6}\n                    radialLabelsTextColor=\"#333333\"\n                    radialLabelsLinkOffset={0}\n                    radialLabelsLinkDiagonalLength={16}\n                    radialLabelsLinkHorizontalLength={24}\n                    radialLabelsLinkStrokeWidth={1}\n                    radialLabelsLinkColor={{ from: 'color' }}\n                    slicesLabelsSkipAngle={10}\n                    slicesLabelsTextColor=\"#333333\"\n                    animate={true}\n                    motionStiffness={90}\n                    motionDamping={15}\n                    defs={[\n                        {\n                            id: 'dots',\n                            type: 'patternDots',\n                            background: 'inherit',\n                            color: 'rgba(255, 255, 255, 0.3)',\n                            size: 4,\n                            padding: 1,\n                            stagger: true\n                        },\n                        {\n                            id: 'lines',\n                            type: 'patternLines',\n                            background: 'inherit',\n                            color: 'rgba(255, 255, 255, 0.3)',\n                            rotation: -45,\n                            lineWidth: 6,\n                            spacing: 10\n                        }\n                    ]}\n                />\n            </div>\n        </div>\n    )\n}\n\nexport default BlockTowns;","import React from 'react';\n\n// Libraries:\n\nimport { ResponsiveBar } from '@nivo/bar'\n\n// Styles\n\nimport '../../styles/BlockHospital.scss'\n\nconst BlockHospital = (props) => {\n\n      const dataHospitals = props.hospitals[0].facets.map(hospital => {\n            const data = {'sector': hospital.path , [hospital.path]: hospital.count}\n            return data;\n      })\n\n      const dataKeys  =  props.hospitals[0].facets.map( hospital => {\n            const key =  hospital.path;\n            return key;\n      });\n\n    return (\n        <div className=\"blockHospital\">\n            <div className=\"blockHospital__block\">\n                <ResponsiveBar\n                    data={ dataHospitals}\n                    keys={ dataKeys}\n                    indexBy=\"sector\"\n                    margin={{ top: 50, right: 130, bottom: 50, left: 60 }}\n                    padding={0.1}\n                    groupMode=\"stacked\"\n                    colors={{ scheme: 'red_blue' }}\n                    defs={[\n                        {\n                            id: 'dots',\n                            type: 'patternDots',\n                            background: 'inherit',\n                            color: '#38bcb2',\n                            size: 4,\n                            padding: 1,\n                            stagger: true\n                        },\n                        {\n                            id: 'lines',\n                            type: 'patternLines',\n                            background: 'inherit',\n                            color: '#eed312',\n                            rotation: -45,\n                            lineWidth: 6,\n                            spacing: 10\n                        }\n                    ]}\n                    borderColor={{ from: 'color', modifiers: [ [ 'darker', 1.6 ] ] }}\n                    axisTop={null}\n                    axisRight={null}\n                    axisBottom={{\n                        tickSize: 5,\n                        tickPadding: 5,\n                        tickRotation: 0,\n                        legend: 'Sector',\n                        legendPosition: 'middle',\n                        legendOffset: 32\n                    }}\n                    axisLeft={{\n                        tickSize: 5,\n                        tickPadding: 5,\n                        tickRotation: 0,\n                        legend: 'No. Personas',\n                        legendPosition: 'middle',\n                        legendOffset: -40\n                    }}\n                    labelSkipWidth={12}\n                    labelSkipHeight={12}\n                    labelTextColor={{ from: 'color', modifiers: [ [ 'darker', 1.6 ] ] }}\n                    legends={[\n                        {\n                            dataFrom: 'keys',\n                            anchor: 'bottom-right',\n                            direction: 'column',\n                            justify: false,\n                            translateX: 120,\n                            translateY: 0,\n                            itemsSpacing: 2,\n                            itemWidth: 100,\n                            itemHeight: 20,\n                            itemDirection: 'left-to-right',\n                            itemOpacity: 0.85,\n                            symbolSize: 20,\n                            effects: [\n                                {\n                                    on: 'hover',\n                                    style: {\n                                        itemOpacity: 1\n                                    }\n                                }\n                            ]\n                        }\n                    ]}\n                    animate={true}\n                    motionStiffness={90}\n                    motionDamping={15}\n                />\n\n            </div>\n        </div>\n    )\n}\n\nexport default BlockHospital;","import React from 'react';\n\n//Libraries\nimport { ResponsiveBubble } from '@nivo/circle-packing';\n\n// Styles\n\nimport '../../styles/BlockSickness.scss';\n\nconst BlockSickness = (props) => {\n\n    const children = Object.keys(props.sickness).map( index => {\n        // Get Count Positve \n        const positiveCount = props.sickness[index].facets.filter( sickness => (sickness.path === 'SI'));\n        const children = {\"name\" : props.sickness[index].name , \n        \"children\": [{ \"name\": props.sickness[index].name , \"count\": positiveCount[0].count }]}\n       \n        return children;\n    })\n\n    const root = {\"name\": \"Pacientes con Enfermedad Pre\",children};\n\n    console.log(root);\n\n\n      \n    return (\n        <div className=\"blockSickness\">\n            <div className=\"blockSickness__block\">\n                <ResponsiveBubble\n                    root={root}\n                    margin={{ top: 20, right: 20, bottom: 20, left: 20 }}\n                    identity=\"name\"\n                    value=\"count\"\n                    colors={{ scheme: 'paired' }}\n                    colorBy=\"depth\"\n                    padding={6}\n                    labelTextColor={{ from: 'color', modifiers: [ [ 'darker', 1.9 ] ] }}\n                    borderWidth={2}\n                    borderColor={{ from: 'color' }}\n                    defs={[\n                        {\n                            id: 'lines',\n                            type: 'patternLines',\n                            background: 'none',\n                            color: 'inherit',\n                            rotation: -45,\n                            lineWidth: 5,\n                            spacing: 8\n                        }\n                    ]}\n                    fill={[ { match: { depth: 1 }, id: 'lines' } ]}\n                    animate={true}\n                    motionStiffness={90}\n                    motionDamping={12}\n                />\n        </div>\n    </div>\n    )\n}\n\nexport  default BlockSickness;\n","import React from 'react';\n// Import Components\nimport BlockTowns from './graphs/BlockTowns';\nimport BlockHospital from './graphs/BlockHospital';\nimport BlockSickness from './graphs/BlockSickness';\n// Import Styles\nimport '../styles/BlockDashboard.scss';\n\nconst BlockDashboard =  (props) => {\n    return(\n        <div className=\"dashBoard\">\n            <div className=\"dashBoard__town\">\n                <div className=\"dashBoard__title\"> No. Casos Positivos por Municipios </div>\n                <BlockTowns towns={props.towns}></BlockTowns>\n            </div>\n            <div className=\"dashBoard__hospital\">\n                <div className=\"dashBoard__title\">Distribución de personas atendidas por Sector:</div>\n                <BlockHospital hospitals={props.hospitals}></BlockHospital>\n            </div>\n            <div className=\"dashBoard__sickness\">\n                <div className=\"dashBoard__title\">Enfermedades presentadas en casos Positivos:</div>\n                <BlockSickness sickness={props.sickness}></BlockSickness>\n            </div>\n        </div>\n    )\n}\n\nexport default BlockDashboard;","import React, {useEffect, useState} from 'react';\n// Components\nimport BlockTerrytory from './components/BlockTerritory';\nimport NavBar from './components/NavBar';\n// Styles\nimport './App.css';\nimport BlockDashboard from './components/BlockDashboard';\n\nfunction App() {\n  // Initial State Territory\n  const initialStateTerritory = { name:'', count:0 } ;\n  const initialStateTowns = [{name:'', count:0 , path:'',state:''}];\n  const initialShowDashboard =  false;\n  const initialHospitals = [{sector:'', count:0}];\n  const initiaSickness = [];\n\n  //Hooks\n  const [terrytory, setTerritory] = useState(initialStateTerritory);\n  const [towns, setTowns] = useState(initialStateTowns)\n  const [showDashboard, setShowDashboard] = useState(initialShowDashboard);\n  const [hospitals, setHospitals] = useState(initialHospitals);\n  const [sickness, setSickness] = useState(initiaSickness);\n  \n  // Const \n  const urlInitial = 'https://datos.cdmx.gob.mx/api/records/1.0/search/?rows=0&dataChart=eyJxdWVyaWVzIjpbeyJjb25maWciOnsiZGF0YXNldCI6ImNhc29zLWFzb2NpYWRvcy1hLWNvdmlkLTE5Iiwib3B0aW9ucyI6eyJyb3dzIjoiMTAifX0sImNoYXJ0cyI6W3siYWxpZ25Nb250aCI6dHJ1ZSwidHlwZSI6ImxpbmUiLCJmdW5jIjoiQVZHIiwieUF4aXMiOiJlZGFkIiwic2NpZW50aWZpY0Rpc3BsYXkiOnRydWUsImNvbG9yIjoiIzY2YzJhNSJ9XSwieEF4aXMiOiJmZWNoYV9kZWYiLCJtYXhwb2ludHMiOiIiLCJ0aW1lc2NhbGUiOiJ5ZWFyIiwic29ydCI6IiJ9XSwiZGlzcGxheUxlZ2VuZCI6dHJ1ZSwiYWxpZ25Nb250aCI6dHJ1ZX0%3D&refine.resultado=Positivo+SARS-CoV-2&refine.entidad_um=CIUDAD+DE+M%C3%89XICO&facet=origen&facet=sector&facet=entidad_um&facet=sexo&facet=municipio_res&facet=tipo_paciente&facet=fecha_ingreso&facet=edad&facet=nacionalidad&facet=embarazo&facet=habla_lengua_indi&facet=diabetes&facet=epoc&facet=asma&facet=inmusupr&facet=hipertension&facet=cardiovascular&facet=obesidad&facet=renal_cronica&facet=tabaquismo&facet=resultado&facet=migrante&facet=pais_nacionalidad&facet=rango_edad&facetsort.origen=-count&facetsort.sector=-count&facetsort.sexo=-count&facetsort.tipo_paciente=-count&facetsort.nacionalidad=-count&facetsort.embarazo=-count&facetsort.habla_lengua_indi=-count&facetsort.diabetes=-count&facetsort.epoc=-count&facetsort.asma=-count&facetsort.inmusupr=-count&facetsort.hipertension=-count&facetsort.cardiovascular=-count&facetsort.obesidad=-count&facetsort.renal_cronica=-count&facetsort.tabaquismo=-count&facetsort.resultado=-count&facetsort.migrante=-count&facetsort.rango_edad=-count&dataset=casos-asociados-a-covid-19&timezone=America%2FMexico_City&lang=es'\n\n  useEffect(() => {\n    fetch(urlInitial)\n      .then(response => response.json())\n      .then((response)=> {\n\n        if(!! response.facet_groups\n           && !!response.facet_groups[0] \n           && !!response.facet_groups[0].facets) {\n             console.log(response);\n              // Search State Terrytory / State \n              const searchTerritory = (response.facet_groups.filter( facet => facet.name === 'entidad_um'));\n              // Search Towns \n              const searchTowns = (response.facet_groups.filter( facet => facet.name === 'municipio_res'));\n              // Search Hospitals \n              const searchHospitals = (response.facet_groups.filter( facet => facet.name === 'sector'));\n              // Search Previous Sickness \n              const searchSickness = (response.facet_groups.filter( facet => facet.name === 'obesidad' \n                || facet.name === 'tabaquismo'  \n                || facet.name === 'diabetes'\n                || facet.name === 'asma'\n                || facet.name === 'hipertension'\n                || facet.name === 'cardiovascular'\n                || facet.name === 'epoc'\n                || facet.name === 'renal_cronica'\n                || facet.name === 'inmusupr'));\n   \n              // SetStates\n              setTerritory({name: searchTerritory[0].facets[0].path , count : searchTerritory[0].facets[0].count})\n              setTowns({...searchTowns})\n              setHospitals({...searchHospitals});\n              setSickness({...searchSickness});\n              setShowDashboard(true);\n           }  \n      })\n  },[])\n\n  return (\n    <div className=\"App\">\n      <NavBar></NavBar>\n      <div className=\"wrapper\">\n        {showDashboard && (\n          <div>\n            <BlockTerrytory terrytory={terrytory}></BlockTerrytory>\n            <BlockDashboard towns={towns} hospitals={hospitals} sickness={sickness}></BlockDashboard>\n\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}
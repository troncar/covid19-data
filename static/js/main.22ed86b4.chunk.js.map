{"version":3,"sources":["components/BlockTerritory.js","components/NavBar.js","components/customHooks/useBreakpoint.js","components/customHooks/useFetchCurrent.js","components/graphs/BlockTowns.js","components/graphs/BlockHospital.js","components/graphs/BlockSickness.js","components/BlockDashboard.js","App.js","index.js"],"names":["BlockTerrytory","props","useFetchCurrent","currentTerrytory","name","error","currentTowns","className","onChange","event","setCurrentTerrytory","target","value","setCurrentTowns","Object","keys","terrytory","facets","map","index","key","count","NavBar","getDeviceConfig","width","useBreakpoint","useState","window","innerWidth","brkPnt","setBrkPnt","useEffect","calcInnerWidth","throttle","addEventListener","removeEventListener","current","currentTerritory","setCurrentTerritory","setError","persons","setPersons","path","state","setTowns","showDashboard","setShowDashboard","sector","hospitals","setHospitals","sickness","setSickness","urlTerritoy","fetch","then","response","json","facet_groups","searchTerritoryName","filter","facet","countPositive","searchTowns","searchHospitals","searchSickness","nhits","catch","BlockTowns","dataTowns","towns","town","data","margin","top","right","bottom","left","innerRadius","padAngle","cornerRadius","colors","scheme","borderWidth","borderColor","from","modifiers","enableRadialLabels","breakpoint","radialLabelsSkipAngle","radialLabelsTextXOffset","radialLabelsTextColor","radialLabelsLinkOffset","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","radialLabelsLinkStrokeWidth","radialLabelsLinkColor","slicesLabelsSkipAngle","slicesLabelsTextColor","animate","motionStiffness","motionDamping","defs","id","type","background","color","size","padding","stagger","rotation","lineWidth","spacing","BlockHospital","dataHospitals","hospital","dataKeys","indexBy","groupMode","axisTop","axisRight","axisBottom","tickSize","tickPadding","tickRotation","legend","legendPosition","legendOffset","axisLeft","labelSkipWidth","labelSkipHeight","labelTextColor","legends","dataFrom","anchor","direction","justify","translateX","translateY","itemsSpacing","itemWidth","itemHeight","itemDirection","itemOpacity","symbolSize","effects","on","style","BlockSickness","root","children","positiveCount","identity","colorBy","fill","match","depth","BlockDashboard","App","setTerritory","searchTerritory","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gZAoCeA,G,OAjCS,SAACC,GAAW,IAAD,EACkBA,EAAMC,gBAAgBD,EAAME,iBAAiBC,MAD/D,mBACxBD,EADwB,KACNE,EADM,KACEC,EADF,KAS/B,OACA,yBAAKC,UAAU,oBACPF,GACA,6BACI,kDACA,yBAAKE,UAAU,0BACX,4BAAQH,KAAK,SAASI,SAXV,SAACC,GACzBR,EAAMS,oBAAoB,CAAC,KAAQD,EAAME,OAAOC,QAChDX,EAAMY,gBAAN,eAA0BP,MAURQ,OAAOC,KAAKd,EAAMe,UAAU,GAAGC,QAAQC,KAAI,SAAAC,GACzC,OACI,4BAAQC,IAAKD,EAAOP,MAAOX,EAAMe,UAAU,GAAGC,OAAOE,GAAOf,MAAOH,EAAMe,UAAU,GAAGC,OAAOE,GAAOf,WAMpH,qEACA,yBAAKG,UAAU,yBAAyBJ,EAAiBkB,WCjB1DC,G,OARC,WACZ,OACI,yBAAKf,UAAU,UACX,yBAAKA,UAAU,iBAAf,oC,kBCHNgB,EAAkB,SAACC,GACvB,OAAGA,EAAQ,IACF,KACCA,GAAS,KAAOA,EAAQ,IACzB,KACCA,GAAS,KAAOA,EAAQ,KACzB,KACCA,GAAS,KACV,UADF,GAkBMC,EAbO,WAAO,IAAD,EACEC,oBAAS,kBAAMH,EAAgBI,OAAOC,eADxC,mBACnBC,EADmB,KACXC,EADW,KAW1B,OARAC,qBAAU,WACR,IAAMC,EAAiBC,KAAS,WAC9BH,EAAUP,EAAgBI,OAAOC,eAChC,KAEH,OADAD,OAAOO,iBAAiB,SAAUF,GAC3B,kBAAML,OAAOQ,oBAAoB,SAAUH,MACjD,IAEIH,GCqCM3B,EA7DS,SAACkC,GACrB,IADiC,EAGeV,mBAAS,IAHxB,mBAG1BW,EAH0B,KAGRC,EAHQ,OAINZ,mBAAS,IAJH,mBAI1BrB,EAJ0B,KAInBkC,EAJmB,OAKHb,qBALG,mBAK1Bc,EAL0B,KAKjBC,EALiB,OAMAf,mBALP,CAAC,CAACtB,KAAK,GAAIiB,MAAM,EAAIqB,KAAK,GAAGC,MAAM,MAD5B,mBAM1BrC,EAN0B,KAMZsC,EANY,OAOSlB,oBALZ,GAFG,mBAO1BmB,EAP0B,KAOXC,EAPW,OAWCpB,mBAHT,CAAC,CAACqB,OAAO,GAAI1B,MAAM,KARX,mBAW1B2B,EAX0B,KAWfC,EAXe,OAYDvB,mBAHT,IATU,mBAY1BwB,EAZ0B,KAYhBC,EAZgB,KAe1BC,EAAW,ugBAAogBhB,GA0CthB,OAxCAL,qBAAU,WACNsB,MAAMD,GACLE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAACC,GACH,GAAMA,EAASE,cACNF,EAASE,aAAa,IACtBF,EAASE,aAAa,GAAGxC,OAAQ,CAClC,IAAMyC,EAAuBH,EAASE,aAAaE,QAAQ,SAAAC,GAAK,MAAmB,eAAfA,EAAMxD,QAEpEyD,EAD2BN,EAASE,aAAaE,QAAQ,SAAAC,GAAK,MAAmB,cAAfA,EAAMxD,QAChC,GAAGa,OAAO0C,QAAO,SAAAC,GAAK,MAAiB,wBAAbA,EAAMlB,QAExEoB,EAAeP,EAASE,aAAaE,QAAQ,SAAAC,GAAK,MAAmB,kBAAfA,EAAMxD,QAClEwC,EAAS,eAAIkB,IACbxB,EAAoB,CAAC,KAAQoB,EAAoB,GAAGzC,OAAO,GAAGb,KAAM,MAASyD,EAAc,GAAGxC,QAG9F,IAAM0C,EAAmBR,EAASE,aAAaE,QAAQ,SAAAC,GAAK,MAAmB,WAAfA,EAAMxD,QAEhE4D,EAAkBT,EAASE,aAAaE,QAAQ,SAAAC,GAAK,MAAmB,aAAfA,EAAMxD,MAC/C,eAAfwD,EAAMxD,MACS,aAAfwD,EAAMxD,MACS,SAAfwD,EAAMxD,MACS,iBAAfwD,EAAMxD,MACS,mBAAfwD,EAAMxD,MACS,SAAfwD,EAAMxD,MACS,kBAAfwD,EAAMxD,MACS,aAAfwD,EAAMxD,QAGbwC,EAAS,eAAIkB,IACbb,EAAa,eAAIc,IACjBZ,EAAY,eAAIa,IAChBlB,GAAiB,GACjBL,EAAWc,EAASU,WAE7BC,OAAM,SAAA7D,GACLkC,EAAS,eAAIlC,SAEnB,CAAC+B,EAAQgB,IAEJ,CAACf,EAAkBhC,EAAQC,EAAc4C,EAAUF,EAAWH,EAAeL,I,kBCOzE2B,G,OA5DI,SAAClE,GAGhB,IAAMmE,EAAYnE,EAAMoE,MAAM,GAAGpD,OAAOC,KAAK,SAAAoD,GAEzC,MADa,CAAC,GAAOA,EAAK5B,KAAO,MAAS4B,EAAK5B,KAAM,MAAS4B,EAAKjD,UAIvE,OACI,yBAAKd,UAAU,cACX,yBAAKA,UAAU,qBACX,kBAAC,IAAD,CACIgE,KAAMH,EACNI,OAAQ,CAAEC,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,IAChDC,YAAa,GACbC,SAAU,GACVC,aAAc,EACdC,OAAQ,CAAEC,OAAQ,YAClBC,YAAa,EACbC,YAAa,CAAEC,KAAM,QAASC,UAAW,CAAE,CAAE,SAAU,MACvDC,mBAAyC,OAArBrF,EAAMsF,WAC1BC,sBAAuB,GACvBC,wBAAyB,EACzBC,sBAAsB,UACtBC,uBAAwB,EACxBC,+BAAgC,GAChCC,iCAAkC,GAClCC,4BAA6B,EAC7BC,sBAAuB,CAAEX,KAAM,SAC/BY,sBAAuB,GACvBC,sBAAsB,UACtBC,SAAS,EACTC,gBAAiB,GACjBC,cAAe,GACfC,KAAM,CACF,CACIC,GAAI,OACJC,KAAM,cACNC,WAAY,UACZC,MAAO,2BACPC,KAAM,EACNC,QAAS,EACTC,SAAS,GAEb,CACIN,GAAI,QACJC,KAAM,eACNC,WAAY,UACZC,MAAO,2BACPI,UAAW,GACXC,UAAW,EACXC,QAAS,W,iBCoDtBC,G,OAnGO,SAAC/G,GAEjB,IAAMgH,EAAgBhH,EAAM+C,UAAU,GAAG/B,OAAOC,KAAI,SAAAgG,GAE9C,OADU,aAAI,OAAUA,EAASxE,MAAQwE,EAASxE,KAAOwE,EAAS7F,UAIlE8F,EAAalH,EAAM+C,UAAU,GAAG/B,OAAOC,KAAK,SAAAgG,GAE5C,OADaA,EAASxE,QAI9B,OACI,yBAAKnC,UAAU,iBACX,yBAAKA,UAAU,wBACX,kBAAC,IAAD,CACIgE,KAAO0C,EACPlG,KAAOoG,EACPC,QAAQ,SACR5C,OAAQ,CAAEC,IAAK,GAAIC,MAAO,IAAKC,OAAQ,GAAIC,KAAM,IACjD+B,QAAS,GACTU,UAAU,UACVrC,OAAQ,CAAEC,OAAQ,YAClBoB,KAAM,CACF,CACIC,GAAI,OACJC,KAAM,cACNC,WAAY,UACZC,MAAO,UACPC,KAAM,EACNC,QAAS,EACTC,SAAS,GAEb,CACIN,GAAI,QACJC,KAAM,eACNC,WAAY,UACZC,MAAO,UACPI,UAAW,GACXC,UAAW,EACXC,QAAS,KAGjB5B,YAAa,CAAEC,KAAM,QAASC,UAAW,CAAE,CAAE,SAAU,OACvDiC,QAAS,KACTC,UAAW,KACXC,WAAY,CACRC,SAAU,EACVC,YAAa,EACbC,aAAc,EACdC,OAAQ,SACRC,eAAgB,SAChBC,aAAc,IAElBC,SAAU,CACNN,SAAU,EACVC,YAAa,EACbC,aAAc,EACdC,OAAQ,eACRC,eAAgB,SAChBC,cAAe,IAEnBE,eAAgB,GAChBC,gBAAiB,GACjBC,eAAgB,CAAE9C,KAAM,QAASC,UAAW,CAAE,CAAE,SAAU,OAC1D8C,QAAS,CACL,CACIC,SAAU,OACVC,OAAQ,eACRC,UAAW,SACXC,SAAS,EACTC,WAAY,IACZC,WAAY,EACZC,aAAc,EACdC,UAAW,IACXC,WAAY,GACZC,cAAe,gBACfC,YAAa,IACbC,WAAY,GACZC,QAAS,CACL,CACIC,GAAI,QACJC,MAAO,CACHJ,YAAa,OAMjC5C,SAAS,EACTC,gBAAiB,GACjBC,cAAe,S,SC5CnB+C,G,OAhDM,SAAClJ,GAEnB,IASMmJ,EAAO,CAAC,KAAQ,+BAA+BC,SATpCvI,OAAOC,KAAKd,EAAMiD,UAAUhC,KAAK,SAAAC,GAE9C,IAAMmI,EAAgBrJ,EAAMiD,SAAS/B,GAAOF,OAAO0C,QAAQ,SAAAT,GAAQ,MAAuB,OAAlBA,EAASR,QAIjF,MAHiB,CAAC,KAASzC,EAAMiD,SAAS/B,GAAOf,KACjD,SAAY,CAAC,CAAE,KAAQH,EAAMiD,SAAS/B,GAAOf,KAAO,MAASkJ,EAAc,GAAGjI,aAOlF,OACI,yBAAKd,UAAU,iBACX,yBAAKA,UAAU,wBACX,kBAAC,IAAD,CACI6I,KAAMA,EACN5E,OAAQ,CAAEC,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,IAChD2E,SAAS,OACT3I,MAAM,QACNoE,OAAQ,CAAEC,OAAQ,UAClBuE,QAAQ,QACR7C,QAAS,EACTuB,eAAgB,CAAE9C,KAAM,QAASC,UAAW,CAAE,CAAE,SAAU,OAC1DH,YAAa,EACbC,YAAa,CAAEC,KAAM,SACrBiB,KAAM,CACF,CACIC,GAAI,QACJC,KAAM,eACNC,WAAY,OACZC,MAAO,UACPI,UAAW,GACXC,UAAW,EACXC,QAAS,IAGjB0C,KAAM,CAAE,CAAEC,MAAO,CAAEC,MAAO,GAAKrD,GAAI,UACnCJ,SAAS,EACTC,gBAAiB,GACjBC,cAAe,SCdpBwD,G,OA5BS,SAAC3J,GAAW,IAAD,EAEkCA,EAAMC,gBAAgBD,EAAME,iBAAiBC,MAF/E,mBAEpBiE,EAFoB,KAEbnB,EAFa,KAEHF,EAFG,KAEQH,EAFR,KAEuBL,EAFvB,KAI/B,OACI,yBAAKjC,UAAU,aACTsC,GACE,6BACqC,wBAAhC5C,EAAME,iBAAiBC,MACpB,yBAAKG,UAAU,mBACX,yBAAKA,UAAU,oBAAf,wCACA,kBAAC,EAAD,CAAY8D,MAAOA,EAAOkB,WAAYtF,EAAMsF,cAGpD,yBAAKhF,UAAU,uBACX,yBAAKA,UAAU,oBAAf,wCAAqEiC,EAArE,wBACA,kBAAC,EAAD,CAAeQ,UAAWA,KAE9B,yBAAKzC,UAAU,uBACX,yBAAKA,UAAU,oBAAf,gDACA,kBAAC,EAAD,CAAe2C,SAAUA,SCqClC2G,MArDf,WAEE,IAFa,EAKqBnI,mBAHJ,CAAEtB,KAAK,GAAIiB,MAAM,IAFlC,mBAKNL,EALM,KAKK8I,EALL,OAMmCpI,mBAAS,IAN5C,mBAMNvB,EANM,KAMYO,EANZ,OAO2BgB,mBAAS,IAPpC,mBAONpB,EAPM,KAOQO,EAPR,OAQ6Ba,oBALZ,GAHjB,mBAQNmB,EARM,KAQSC,EART,KASPyC,EAAa9D,IA6BnB,OAxBAM,qBAAU,WACRsB,MAHiB,8eAIdC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAACC,GAEL,GAAMA,EAASE,cACPF,EAASE,aAAa,IACtBF,EAASE,aAAa,GAAGxC,OAAQ,CAGnC,IAAM8I,EAAmBxG,EAASE,aAAaE,QAAQ,SAAAC,GAAK,MAAmB,eAAfA,EAAMxD,QAEhE0D,EAAeP,EAASE,aAAaE,QAAQ,SAAAC,GAAK,MAAmB,kBAAfA,EAAMxD,QAElE0J,EAAa,eAAIC,IAEjBrJ,EAAoB,CAAC,KAAQqJ,EAAgB,GAAG9I,OAAO,GAAGb,OAC1DS,EAAgB,eAAIiD,IACpBhB,GAAiB,SAG3B,IAIA,yBAAKvC,UAAU,OACb,kBAAC,EAAD,MACA,yBAAKA,UAAU,WACZsC,GACC,6BACE,kBAAC,EAAD,CAAgB7B,UAAWA,EAAWd,gBAAiBA,EAAiBQ,oBAAqBA,EAAqBP,iBAAkBA,EAAkBU,gBAAiBA,IACvK,kBAAC,EAAD,CAAgBV,iBAAkBA,EAAmBD,gBAAiBA,EAAkBqF,WAAYA,EAAYjF,aAAcA,QCnD1I0J,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.22ed86b4.chunk.js","sourcesContent":["import React from 'react';\nimport '../styles/BlockTerrytory.scss'\n\nconst BlockTerrytory =  (props) => {\n    const [currentTerrytory, error , currentTowns] = props.useFetchCurrent(props.currentTerrytory.name);\n\n\n    const handlerChangeSelect = (event) => {\n        props.setCurrentTerrytory({'name': event.target.value});\n        props.setCurrentTowns({...currentTowns});\n    }\n\n    return(\n    <div className=\"blockTerritory\">\n        { !!error && (\n            <div>\n                <h3>Estado Predefinido</h3>\n                <div className=\"blockTerritory__select\">\n                    <select name=\"select\" onChange={handlerChangeSelect}>\n                        { Object.keys(props.terrytory[0].facets).map(index => {\n                            return (\n                                <option key={index} value={props.terrytory[0].facets[index].name}>{props.terrytory[0].facets[index].name}</option> \n                            );\n                        })\n                        }\n                    </select>\n                </div>\n                <h3>Total de Casos Positivos SARS-CoV-2: </h3> \n                <div className=\"blockTerritory__count\">{currentTerrytory.count}</div>\n            </div>\n        )}\n\n    </div>\n    )\n}\n\nexport default BlockTerrytory;","import React from 'react';\nimport '../styles/NavBar.scss';\n\nconst NavBar =  () => {\n    return (\n        <div className=\"navBar\">\n            <div className=\"navBar__title\"> Datos Asociados al Covid 19 </div>\n        </div>\n    )\n}\n\nexport default NavBar;","import  {useState, useEffect } from 'react';\nimport throttle from 'lodash.throttle';\n\nconst getDeviceConfig = (width) => {\n  if(width < 320) {\n    return 'xs';\n  } else if(width >= 320 && width < 720 ) {\n    return 'sm';\n  } else if(width >= 720 && width < 1024) {\n    return 'md';\n  } else if(width >= 1024) {\n    return 'lg';\n  }\n};\n\nconst useBreakpoint = () => {\n  const [brkPnt, setBrkPnt] = useState(() => getDeviceConfig(window.innerWidth));\n  \n  useEffect(() => {\n    const calcInnerWidth = throttle(function() {\n      setBrkPnt(getDeviceConfig(window.innerWidth))\n    }, 200); \n    window.addEventListener('resize', calcInnerWidth);\n    return () => window.removeEventListener('resize', calcInnerWidth);\n  }, []);\n\n  return brkPnt;\n}\nexport default useBreakpoint;\n\n","import { useState, useEffect } from \"react\"\n\nconst useFetchCurrent = (current) => {\n    const initialStateTowns = [{name:'', count:0 , path:'',state:''}];\n    const initialShowDashboard =  false;\n    const [currentTerritory, setCurrentTerritory] = useState({});\n    const [error, setError ] = useState({});\n    const [persons, setPersons] = useState();\n    const [currentTowns, setTowns] = useState(initialStateTowns)\n    const [showDashboard, setShowDashboard] = useState(initialShowDashboard);\n    const initialHospitals = [{sector:'', count:0}];\n    const initiaSickness = [];\n    //Hooks\n    const [hospitals, setHospitals] = useState(initialHospitals);\n    const [sickness, setSickness] = useState(initiaSickness);\n\n\n    const  urlTerritoy =  `https://datos.cdmx.gob.mx/api/records/1.0/search/?dataset=casos-asociados-a-covid-19&rows=0&facet=origen&facet=sector&facet=entidad_um&facet=sexo&facet=municipio_res&facet=tipo_paciente&facet=fecha_ingreso&facet=edad&facet=nacionalidad&facet=embarazo&facet=habla_lengua_indi&facet=diabetes&facet=epoc&facet=asma&facet=inmusupr&facet=hipertension&facet=cardiovascular&facet=obesidad&facet=renal_cronica&facet=tabaquismo&facet=resultado&facet=migrante&facet=pais_nacionalidad&facet=rango_edad&refine.entidad_um=${current}`\n\n    useEffect(()=> {\n        fetch(urlTerritoy)\n        .then(response => response.json())\n        .then((response)=> {\n            if(!! response.facet_groups\n                && !!response.facet_groups[0] \n                && !!response.facet_groups[0].facets) {\n                    const searchTerritoryName = (response.facet_groups.filter( facet => facet.name === 'entidad_um')); \n                    const searchTerritoryPostive =  (response.facet_groups.filter( facet => facet.name === 'resultado')); \n                    const countPositive = (searchTerritoryPostive[0].facets.filter(facet => facet.path==='Positivo SARS-CoV-2'))\n                     // Search Towns \n                    const searchTowns = (response.facet_groups.filter( facet => facet.name === 'municipio_res'));\n                    setTowns({...searchTowns})\n                    setCurrentTerritory({'name': searchTerritoryName[0].facets[0].name, 'count': countPositive[0].count });\n\n                    // Search Hospitals \n                    const searchHospitals = (response.facet_groups.filter( facet => facet.name === 'sector'));\n                    // Search Previous Sickness \n                    const searchSickness = (response.facet_groups.filter( facet => facet.name === 'obesidad' \n                        || facet.name === 'tabaquismo'  \n                        || facet.name === 'diabetes'\n                        || facet.name === 'asma'\n                        || facet.name === 'hipertension'\n                        || facet.name === 'cardiovascular'\n                        || facet.name === 'epoc'\n                        || facet.name === 'renal_cronica'\n                        || facet.name === 'inmusupr'));\n        \n                    // Default State\n                    setTowns({...searchTowns})\n                    setHospitals({...searchHospitals});\n                    setSickness({...searchSickness});\n                    setShowDashboard(true);\n                    setPersons(response.nhits);\n                }\n        }).catch(error => {\n            setError({...error});\n        });\n    },[current,urlTerritoy])\n\n    return [currentTerritory, error , currentTowns, sickness ,hospitals, showDashboard, persons]\n\n}\n\nexport default useFetchCurrent;","import React from 'react';\n// Libraries\nimport { ResponsivePie } from '@nivo/pie'\n// Styles\nimport '../../styles/BlockTowns.scss';\n\nconst BlockTowns = (props) => {\n  \n\n    const dataTowns = props.towns[0].facets.map( town => {\n        const data = {\"id\" : town.path , 'label': town.path ,\"value\": town.count};\n        return data;\n    })\n\n    return (\n        <div className=\"blockTowns\">\n            <div className=\"blockTowns__block\">\n                <ResponsivePie\n                    data={dataTowns}\n                    margin={{ top: 10, right: 20, bottom: 80, left: 20 }}\n                    innerRadius={0.5}\n                    padAngle={0.7}\n                    cornerRadius={3}\n                    colors={{ scheme: 'spectral' }}\n                    borderWidth={1}\n                    borderColor={{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] }}\n                    enableRadialLabels={props.breakpoint === 'sm' ? false : true}\n                    radialLabelsSkipAngle={10}\n                    radialLabelsTextXOffset={6}\n                    radialLabelsTextColor=\"#333333\"\n                    radialLabelsLinkOffset={0}\n                    radialLabelsLinkDiagonalLength={10}\n                    radialLabelsLinkHorizontalLength={24}\n                    radialLabelsLinkStrokeWidth={1}\n                    radialLabelsLinkColor={{ from: 'color' }}\n                    slicesLabelsSkipAngle={10}\n                    slicesLabelsTextColor=\"#333333\"\n                    animate={true}\n                    motionStiffness={90}\n                    motionDamping={15}\n                    defs={[\n                        {\n                            id: 'dots',\n                            type: 'patternDots',\n                            background: 'inherit',\n                            color: 'rgba(255, 255, 255, 0.3)',\n                            size: 4,\n                            padding: 1,\n                            stagger: true\n                        },\n                        {\n                            id: 'lines',\n                            type: 'patternLines',\n                            background: 'inherit',\n                            color: 'rgba(255, 255, 255, 0.3)',\n                            rotation: -45,\n                            lineWidth: 6,\n                            spacing: 10\n                        }\n                    ]}\n                />\n            </div>\n        </div>\n    )\n}\n\nexport default BlockTowns;","import React from 'react';\n\n// Libraries:\n\nimport { ResponsiveBar } from '@nivo/bar'\n\n// Styles\n\nimport '../../styles/BlockHospital.scss'\n\nconst BlockHospital = (props) => {\n\n      const dataHospitals = props.hospitals[0].facets.map(hospital => {\n            const data = {'sector': hospital.path , [hospital.path]: hospital.count}\n            return data;\n      })\n\n      const dataKeys  =  props.hospitals[0].facets.map( hospital => {\n            const key =  hospital.path;\n            return key;\n      });\n\n    return (\n        <div className=\"blockHospital\">\n            <div className=\"blockHospital__block\">\n                <ResponsiveBar\n                    data={ dataHospitals}\n                    keys={ dataKeys}\n                    indexBy=\"sector\"\n                    margin={{ top: 50, right: 130, bottom: 50, left: 60 }}\n                    padding={0.1}\n                    groupMode=\"stacked\"\n                    colors={{ scheme: 'red_blue' }}\n                    defs={[\n                        {\n                            id: 'dots',\n                            type: 'patternDots',\n                            background: 'inherit',\n                            color: '#38bcb2',\n                            size: 4,\n                            padding: 1,\n                            stagger: true\n                        },\n                        {\n                            id: 'lines',\n                            type: 'patternLines',\n                            background: 'inherit',\n                            color: '#eed312',\n                            rotation: -45,\n                            lineWidth: 6,\n                            spacing: 10\n                        }\n                    ]}\n                    borderColor={{ from: 'color', modifiers: [ [ 'darker', 1.6 ] ] }}\n                    axisTop={null}\n                    axisRight={null}\n                    axisBottom={{\n                        tickSize: 5,\n                        tickPadding: 5,\n                        tickRotation: 0,\n                        legend: 'Sector',\n                        legendPosition: 'middle',\n                        legendOffset: 32\n                    }}\n                    axisLeft={{\n                        tickSize: 5,\n                        tickPadding: 5,\n                        tickRotation: 0,\n                        legend: 'No. Personas',\n                        legendPosition: 'middle',\n                        legendOffset: -40\n                    }}\n                    labelSkipWidth={12}\n                    labelSkipHeight={12}\n                    labelTextColor={{ from: 'color', modifiers: [ [ 'darker', 1.6 ] ] }}\n                    legends={[\n                        {\n                            dataFrom: 'keys',\n                            anchor: 'bottom-right',\n                            direction: 'column',\n                            justify: false,\n                            translateX: 120,\n                            translateY: 0,\n                            itemsSpacing: 2,\n                            itemWidth: 100,\n                            itemHeight: 20,\n                            itemDirection: 'left-to-right',\n                            itemOpacity: 0.85,\n                            symbolSize: 20,\n                            effects: [\n                                {\n                                    on: 'hover',\n                                    style: {\n                                        itemOpacity: 1\n                                    }\n                                }\n                            ]\n                        }\n                    ]}\n                    animate={true}\n                    motionStiffness={90}\n                    motionDamping={15}\n                />\n\n            </div>\n        </div>\n    )\n}\n\nexport default BlockHospital;","import React from 'react';\n\n//Libraries\nimport { ResponsiveBubble } from '@nivo/circle-packing';\n\n// Styles\n\nimport '../../styles/BlockSickness.scss';\n\nconst BlockSickness = (props) => {\n\n    const children = Object.keys(props.sickness).map( index => {\n        // Get Count Positve \n        const positiveCount = props.sickness[index].facets.filter( sickness => (sickness.path === 'SI'));\n        const children = {\"name\" : props.sickness[index].name , \n        \"children\": [{ \"name\": props.sickness[index].name , \"count\": positiveCount[0].count }]}\n       \n        return children;\n    })\n\n    const root = {\"name\": \"Pacientes con Enfermedad Pre\",children};\n      \n    return (\n        <div className=\"blockSickness\">\n            <div className=\"blockSickness__block\">\n                <ResponsiveBubble\n                    root={root}\n                    margin={{ top: 20, right: 20, bottom: 20, left: 20 }}\n                    identity=\"name\"\n                    value=\"count\"\n                    colors={{ scheme: 'paired' }}\n                    colorBy=\"depth\"\n                    padding={6}\n                    labelTextColor={{ from: 'color', modifiers: [ [ 'darker', 1.9 ] ] }}\n                    borderWidth={2}\n                    borderColor={{ from: 'color' }}\n                    defs={[\n                        {\n                            id: 'lines',\n                            type: 'patternLines',\n                            background: 'none',\n                            color: 'inherit',\n                            rotation: -45,\n                            lineWidth: 5,\n                            spacing: 8\n                        }\n                    ]}\n                    fill={[ { match: { depth: 1 }, id: 'lines' } ]}\n                    animate={true}\n                    motionStiffness={90}\n                    motionDamping={12}\n                />\n        </div>\n    </div>\n    )\n}\n\nexport  default BlockSickness;\n","import React from 'react';\n// Import Components\nimport BlockTowns from './graphs/BlockTowns';\nimport BlockHospital from './graphs/BlockHospital';\nimport BlockSickness from './graphs/BlockSickness';\n// Import Styles\nimport '../styles/BlockDashboard.scss';\n\nconst BlockDashboard =  (props) => {\n    \n    const [, , towns, sickness ,hospitals, showDashboard, persons] = props.useFetchCurrent(props.currentTerrytory.name);\n \n    return(\n        <div className=\"dashBoard\">\n            { showDashboard && (\n                <div>\n                    {props.currentTerrytory.name === 'CIUDAD DE MÉXICO' && (\n                        <div className=\"dashBoard__town\">\n                            <div className=\"dashBoard__title\"> No. Casos Positivos por Municipios </div>\n                            <BlockTowns towns={towns} breakpoint={props.breakpoint}></BlockTowns>\n                        </div>  \n                    )}\n                    <div className=\"dashBoard__hospital\">\n                        <div className=\"dashBoard__title\">Distribución por Sector de Salud. {persons} personas atendidas:</div>\n                        <BlockHospital hospitals={hospitals}></BlockHospital>\n                    </div>\n                    <div className=\"dashBoard__sickness\">\n                        <div className=\"dashBoard__title\">Enfermedades presentadas en casos Positivos:</div>\n                        <BlockSickness sickness={sickness}></BlockSickness>\n                    </div>\n                </div>\n            )}\n        </div>\n    )\n}\n\nexport default BlockDashboard;","import React, {useEffect, useState} from 'react';\n// Components\nimport BlockTerrytory from './components/BlockTerritory';\nimport NavBar from './components/NavBar';\n// Custom Hooks\nimport useBreakpoint from  './components/customHooks/useBreakpoint';\nimport useFetchCurrent from './components/customHooks/useFetchCurrent';\n\n// Styles\nimport './App.css';\nimport BlockDashboard from './components/BlockDashboard';\n\nfunction App() {\n  // Initial State Territory\n  const initialStateTerritory = { name:'', count:0 } ;\n  const initialShowDashboard =  false;\n  //Hooks\n  const [terrytory, setTerritory] = useState(initialStateTerritory);\n  const [currentTerrytory, setCurrentTerrytory] = useState({});\n  const [currentTowns, setCurrentTowns] = useState({});\n  const [showDashboard, setShowDashboard] = useState(initialShowDashboard);\n  const breakpoint = useBreakpoint();\n  \n  // Const \n  const urlInitial = 'https://datos.cdmx.gob.mx/api/records/1.0/search/?dataset=casos-asociados-a-covid-19&rows=0&facet=origen&facet=sector&facet=entidad_um&facet=sexo&facet=municipio_res&facet=tipo_paciente&facet=fecha_ingreso&facet=edad&facet=nacionalidad&facet=embarazo&facet=habla_lengua_indi&facet=diabetes&facet=epoc&facet=asma&facet=inmusupr&facet=hipertension&facet=cardiovascular&facet=obesidad&facet=renal_cronica&facet=tabaquismo&facet=resultado&facet=migrante&facet=pais_nacionalidad&facet=rango_edad'\n\n  useEffect(() => {\n    fetch(urlInitial)\n      .then(response => response.json())\n      .then((response)=> {\n\n        if(!! response.facet_groups\n           && !!response.facet_groups[0] \n           && !!response.facet_groups[0].facets) {\n\n              // Search State Terrytory / State \n              const searchTerritory = (response.facet_groups.filter( facet => facet.name === 'entidad_um'));  \n              // Search Towns \n              const searchTowns = (response.facet_groups.filter( facet => facet.name === 'municipio_res'));     \n              // SetStates\n              setTerritory({...searchTerritory})\n              // Default State\n              setCurrentTerrytory({'name': searchTerritory[0].facets[0].name })\n              setCurrentTowns({...searchTowns})\n              setShowDashboard(true);\n           }  \n      })\n  },[])\n\n  \n  return (\n    <div className=\"App\">\n      <NavBar></NavBar>\n      <div className=\"wrapper\">\n        {showDashboard && (\n          <div>\n            <BlockTerrytory terrytory={terrytory} useFetchCurrent={useFetchCurrent} setCurrentTerrytory={setCurrentTerrytory} currentTerrytory={currentTerrytory} setCurrentTowns={setCurrentTowns}></BlockTerrytory>\n            <BlockDashboard currentTerrytory={currentTerrytory}  useFetchCurrent={useFetchCurrent}  breakpoint={breakpoint} currentTowns={currentTowns}></BlockDashboard>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}